; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = uno, esp32

[env:uno]
platform = atmelavr
board = uno
framework = arduino
build_src_filter = +<*> -<main_legacy.cpp>
lib_deps = 
	bblanchon/ArduinoJson@^6.21.2
	adafruit/DHT sensor library@^1.4.4
monitor_speed = 9600
monitor_filters = 
	default
	time
build_flags = 
	-DARDUINO_UNO
	-DPHASE_1_EMBEDDED_ML

[env:esp32]
platform = espressif32
board = esp32dev
framework = arduino
build_src_filter = +<*> -<main.cpp> -<main_legacy.cpp> +<../edge-ai/esp32-ml/src/*>
lib_extra_dirs = lib/tflite-micro
lib_deps = 
	bblanchon/ArduinoJson@^6.21.2
	knolleary/PubSubClient@^2.8
	ESP32WebServer
	SPIFFS
	WiFi
	DNSServer
	ArduinoOTA
monitor_speed = 115200
monitor_filters = 
	esp32_exception_decoder
	time
board_build.partitions = huge_app.csv
board_build.filesystem = spiffs
build_flags = 
	-DESP32_EDGE_AI
	-DCORE_DEBUG_LEVEL=3
	-DBOARD_HAS_PSRAM
	-mfix-esp32-psram-cache-issue
	-DARDUINO_PARTITION_huge_app
	-DPHASE_2_EDGE_AI
	-DPHASE_3_WIFI_GATEWAY
	-Ilib/tflite-micro
	-I.pio/libdeps/esp32dev/Arduino_TensorFlowLite/src
upload_speed = 921600

[env:test_uno]
platform = atmelavr
board = uno
framework = arduino
test_filter = test_arduino
lib_deps = ${env:uno.lib_deps}

[env:test_esp32]
platform = espressif32
board = esp32dev
framework = arduino
test_filter = test_esp32
lib_deps = ${env:esp32.lib_deps}
